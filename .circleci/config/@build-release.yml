version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: build-ui_ee1b_{{checksum ".buildcache/cache-keys/build-ui-ee1bca933dae6187a0a3358d4b3a17b36d4b6fde"}}
          keys:
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Layer Cache: build-ui'
      - run:
          command: LAYER_SPEC_ID=06-build-ui-ee1bca933dae6187a0a3358d4b3a17b36d4b6fde make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-c6cdf1b224722d2520e082320f2a71875913247c-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-install-go-f39f5d66161bdd79b182943a3accdd95510c4812-image
          name: Build install-go layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491-image
          name: Build install-go-tools layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f-image
          name: Build set-workdir layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 04-install-yarn-d8f06ad14416849abce755043d691e698bd16d6a-image
          name: Build install-yarn layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 05-ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228-image
          name: Build ui-dependencies layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-ee1bca933dae6187a0a3358d4b3a17b36d4b6fde-image
          name: Build build-ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-ee1bca933dae6187a0a3358d4b3a17b36d4b6fde-save
          name: Build build-ui layer
      - save_cache:
          paths:
            - .buildcache/archives/06-build-ui-ee1bca933dae6187a0a3358d4b3a17b36d4b6fde.tar.gz
          key: build-ui_ee1b_{{checksum ".buildcache/cache-keys/build-ui-ee1bca933dae6187a0a3358d4b3a17b36d4b6fde"}}
          name: 'Save Layer Cache: build-ui'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-6725bb6ef29a9749339729f90079eed8e443e4c8-{{checksum ".buildcache/cache-keys/package-6725bb6ef29a9749339729f90079eed8e443e4c8"}}
          name: Restore package cache
      - restore_cache:
          key: package-942fda969ce896d0a0aaad993d87f0b78eada7c5-{{checksum ".buildcache/cache-keys/package-942fda969ce896d0a0aaad993d87f0b78eada7c5"}}
          name: Restore package cache
      - restore_cache:
          key: package-b02b735345ead680a0bf2f3f113abfda4033f4ae-{{checksum ".buildcache/cache-keys/package-b02b735345ead680a0bf2f3f113abfda4033f4ae"}}
          name: Restore package cache
      - restore_cache:
          key: package-08b4f322a2ddf2b476b941f18ee663af35db37d4-{{checksum ".buildcache/cache-keys/package-08b4f322a2ddf2b476b941f18ee663af35db37d4"}}
          name: Restore package cache
      - restore_cache:
          key: package-2f993f3763b8e4d03288a1cb2ece94a8324322ce-{{checksum ".buildcache/cache-keys/package-2f993f3763b8e4d03288a1cb2ece94a8324322ce"}}
          name: Restore package cache
      - restore_cache:
          key: package-2727cc9406a719f84a58075f3b7aa8e747a7c190-{{checksum ".buildcache/cache-keys/package-2727cc9406a719f84a58075f3b7aa8e747a7c190"}}
          name: Restore package cache
      - restore_cache:
          key: package-bafff13a0e49efe4ac7c47317fc884a1decc31ff-{{checksum ".buildcache/cache-keys/package-bafff13a0e49efe4ac7c47317fc884a1decc31ff"}}
          name: Restore package cache
      - restore_cache:
          key: package-27aaa5125c558b8d4fcf50f4d8fad525ba5bcb2a-{{checksum ".buildcache/cache-keys/package-27aaa5125c558b8d4fcf50f4d8fad525ba5bcb2a"}}
          name: Restore package cache
      - restore_cache:
          key: package-aff40c0fa1458edf21a3dd709b8fd45a05e0a04d-{{checksum ".buildcache/cache-keys/package-aff40c0fa1458edf21a3dd709b8fd45a05e0a04d"}}
          name: Restore package cache
      - restore_cache:
          key: package-d0429a2db8a9fa8f8e534d941948e8762afa1241-{{checksum ".buildcache/cache-keys/package-d0429a2db8a9fa8f8e534d941948e8762afa1241"}}
          name: Restore package cache
      - restore_cache:
          key: package-7c51bcce3eb9dccbe75798fad1fac399c30dbe10-{{checksum ".buildcache/cache-keys/package-7c51bcce3eb9dccbe75798fad1fac399c30dbe10"}}
          name: Restore package cache
      - restore_cache:
          key: package-f32f92f92f731f47d1be27dd27b789cadcfe777b-{{checksum ".buildcache/cache-keys/package-f32f92f92f731f47d1be27dd27b789cadcfe777b"}}
          name: Restore package cache
      - restore_cache:
          key: package-62a9d90b0eba75bf2ae50edc600c59c631e31752-{{checksum ".buildcache/cache-keys/package-62a9d90b0eba75bf2ae50edc600c59c631e31752"}}
          name: Restore package cache
      - restore_cache:
          key: package-c766121b0823375a3f534a69fd6e829114f49d9d-{{checksum ".buildcache/cache-keys/package-c766121b0823375a3f534a69fd6e829114f49d9d"}}
          name: Restore package cache
      - restore_cache:
          key: package-519e2025575149e4b6bd47ec1860082e61b14f3a-{{checksum ".buildcache/cache-keys/package-519e2025575149e4b6bd47ec1860082e61b14f3a"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-89ef7b70a778ea0b.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-89ef7b70a778ea0b.tar.gz .buildcache/packages lockfile-89ef7b70a778ea0b.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-89ef7b70a778ea0b.tar.gz .buildcache/packages/store/*.json lockfile-89ef7b70a778ea0b.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-89ef7b70a778ea0b.yml
      - store_artifacts:
          path: packages-89ef7b70a778ea0b.tar.gz
      - store_artifacts:
          path: meta-89ef7b70a778ea0b.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-6725bb6ef29a9749339729f90079eed8e443e4c8-{{checksum ".buildcache/cache-keys/package-6725bb6ef29a9749339729f90079eed8e443e4c8"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_aee3_{{checksum ".buildcache/cache-keys/copy-source-aee3b86247aa6a7703185d13055ec8ef0561803d"}}
          keys:
            - warm-go-build-vendor-cache_4d2c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4d2cd97c46a8cbe60b8b278a7c1abead3418dbf4"}}
            - build-static-assets_543d_{{checksum ".buildcache/cache-keys/build-static-assets-543db80681a157cc7cad64884b4ca8cd01310a0a"}}
            - build-ui_ee1b_{{checksum ".buildcache/cache-keys/build-ui-ee1bca933dae6187a0a3358d4b3a17b36d4b6fde"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-6725bb6ef29a9749339729f90079eed8e443e4c8-{{checksum ".buildcache/cache-keys/package-6725bb6ef29a9749339729f90079eed8e443e4c8"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 6725bb6ef29a9749339729f90079eed8e443e4c8
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-942fda969ce896d0a0aaad993d87f0b78eada7c5-{{checksum ".buildcache/cache-keys/package-942fda969ce896d0a0aaad993d87f0b78eada7c5"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_aee3_{{checksum ".buildcache/cache-keys/copy-source-aee3b86247aa6a7703185d13055ec8ef0561803d"}}
          keys:
            - warm-go-build-vendor-cache_4d2c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4d2cd97c46a8cbe60b8b278a7c1abead3418dbf4"}}
            - build-static-assets_543d_{{checksum ".buildcache/cache-keys/build-static-assets-543db80681a157cc7cad64884b4ca8cd01310a0a"}}
            - build-ui_ee1b_{{checksum ".buildcache/cache-keys/build-ui-ee1bca933dae6187a0a3358d4b3a17b36d4b6fde"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-942fda969ce896d0a0aaad993d87f0b78eada7c5-{{checksum ".buildcache/cache-keys/package-942fda969ce896d0a0aaad993d87f0b78eada7c5"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 942fda969ce896d0a0aaad993d87f0b78eada7c5
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b02b735345ead680a0bf2f3f113abfda4033f4ae-{{checksum ".buildcache/cache-keys/package-b02b735345ead680a0bf2f3f113abfda4033f4ae"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_aee3_{{checksum ".buildcache/cache-keys/copy-source-aee3b86247aa6a7703185d13055ec8ef0561803d"}}
          keys:
            - warm-go-build-vendor-cache_4d2c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4d2cd97c46a8cbe60b8b278a7c1abead3418dbf4"}}
            - build-static-assets_543d_{{checksum ".buildcache/cache-keys/build-static-assets-543db80681a157cc7cad64884b4ca8cd01310a0a"}}
            - build-ui_ee1b_{{checksum ".buildcache/cache-keys/build-ui-ee1bca933dae6187a0a3358d4b3a17b36d4b6fde"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b02b735345ead680a0bf2f3f113abfda4033f4ae-{{checksum ".buildcache/cache-keys/package-b02b735345ead680a0bf2f3f113abfda4033f4ae"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b02b735345ead680a0bf2f3f113abfda4033f4ae
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-08b4f322a2ddf2b476b941f18ee663af35db37d4-{{checksum ".buildcache/cache-keys/package-08b4f322a2ddf2b476b941f18ee663af35db37d4"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_aee3_{{checksum ".buildcache/cache-keys/copy-source-aee3b86247aa6a7703185d13055ec8ef0561803d"}}
          keys:
            - warm-go-build-vendor-cache_4d2c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4d2cd97c46a8cbe60b8b278a7c1abead3418dbf4"}}
            - build-static-assets_543d_{{checksum ".buildcache/cache-keys/build-static-assets-543db80681a157cc7cad64884b4ca8cd01310a0a"}}
            - build-ui_ee1b_{{checksum ".buildcache/cache-keys/build-ui-ee1bca933dae6187a0a3358d4b3a17b36d4b6fde"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-08b4f322a2ddf2b476b941f18ee663af35db37d4-{{checksum ".buildcache/cache-keys/package-08b4f322a2ddf2b476b941f18ee663af35db37d4"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 08b4f322a2ddf2b476b941f18ee663af35db37d4
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2f993f3763b8e4d03288a1cb2ece94a8324322ce-{{checksum ".buildcache/cache-keys/package-2f993f3763b8e4d03288a1cb2ece94a8324322ce"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_aee3_{{checksum ".buildcache/cache-keys/copy-source-aee3b86247aa6a7703185d13055ec8ef0561803d"}}
          keys:
            - warm-go-build-vendor-cache_4d2c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4d2cd97c46a8cbe60b8b278a7c1abead3418dbf4"}}
            - build-static-assets_543d_{{checksum ".buildcache/cache-keys/build-static-assets-543db80681a157cc7cad64884b4ca8cd01310a0a"}}
            - build-ui_ee1b_{{checksum ".buildcache/cache-keys/build-ui-ee1bca933dae6187a0a3358d4b3a17b36d4b6fde"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2f993f3763b8e4d03288a1cb2ece94a8324322ce-{{checksum ".buildcache/cache-keys/package-2f993f3763b8e4d03288a1cb2ece94a8324322ce"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2f993f3763b8e4d03288a1cb2ece94a8324322ce
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2727cc9406a719f84a58075f3b7aa8e747a7c190-{{checksum ".buildcache/cache-keys/package-2727cc9406a719f84a58075f3b7aa8e747a7c190"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_aee3_{{checksum ".buildcache/cache-keys/copy-source-aee3b86247aa6a7703185d13055ec8ef0561803d"}}
          keys:
            - warm-go-build-vendor-cache_4d2c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4d2cd97c46a8cbe60b8b278a7c1abead3418dbf4"}}
            - build-static-assets_543d_{{checksum ".buildcache/cache-keys/build-static-assets-543db80681a157cc7cad64884b4ca8cd01310a0a"}}
            - build-ui_ee1b_{{checksum ".buildcache/cache-keys/build-ui-ee1bca933dae6187a0a3358d4b3a17b36d4b6fde"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2727cc9406a719f84a58075f3b7aa8e747a7c190-{{checksum ".buildcache/cache-keys/package-2727cc9406a719f84a58075f3b7aa8e747a7c190"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2727cc9406a719f84a58075f3b7aa8e747a7c190
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-bafff13a0e49efe4ac7c47317fc884a1decc31ff-{{checksum ".buildcache/cache-keys/package-bafff13a0e49efe4ac7c47317fc884a1decc31ff"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_aee3_{{checksum ".buildcache/cache-keys/copy-source-aee3b86247aa6a7703185d13055ec8ef0561803d"}}
          keys:
            - warm-go-build-vendor-cache_4d2c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4d2cd97c46a8cbe60b8b278a7c1abead3418dbf4"}}
            - build-static-assets_543d_{{checksum ".buildcache/cache-keys/build-static-assets-543db80681a157cc7cad64884b4ca8cd01310a0a"}}
            - build-ui_ee1b_{{checksum ".buildcache/cache-keys/build-ui-ee1bca933dae6187a0a3358d4b3a17b36d4b6fde"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-bafff13a0e49efe4ac7c47317fc884a1decc31ff-{{checksum ".buildcache/cache-keys/package-bafff13a0e49efe4ac7c47317fc884a1decc31ff"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: bafff13a0e49efe4ac7c47317fc884a1decc31ff
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-27aaa5125c558b8d4fcf50f4d8fad525ba5bcb2a-{{checksum ".buildcache/cache-keys/package-27aaa5125c558b8d4fcf50f4d8fad525ba5bcb2a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_aee3_{{checksum ".buildcache/cache-keys/copy-source-aee3b86247aa6a7703185d13055ec8ef0561803d"}}
          keys:
            - warm-go-build-vendor-cache_4d2c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4d2cd97c46a8cbe60b8b278a7c1abead3418dbf4"}}
            - build-static-assets_543d_{{checksum ".buildcache/cache-keys/build-static-assets-543db80681a157cc7cad64884b4ca8cd01310a0a"}}
            - build-ui_ee1b_{{checksum ".buildcache/cache-keys/build-ui-ee1bca933dae6187a0a3358d4b3a17b36d4b6fde"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-27aaa5125c558b8d4fcf50f4d8fad525ba5bcb2a-{{checksum ".buildcache/cache-keys/package-27aaa5125c558b8d4fcf50f4d8fad525ba5bcb2a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 27aaa5125c558b8d4fcf50f4d8fad525ba5bcb2a
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-aff40c0fa1458edf21a3dd709b8fd45a05e0a04d-{{checksum ".buildcache/cache-keys/package-aff40c0fa1458edf21a3dd709b8fd45a05e0a04d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_aee3_{{checksum ".buildcache/cache-keys/copy-source-aee3b86247aa6a7703185d13055ec8ef0561803d"}}
          keys:
            - warm-go-build-vendor-cache_4d2c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4d2cd97c46a8cbe60b8b278a7c1abead3418dbf4"}}
            - build-static-assets_543d_{{checksum ".buildcache/cache-keys/build-static-assets-543db80681a157cc7cad64884b4ca8cd01310a0a"}}
            - build-ui_ee1b_{{checksum ".buildcache/cache-keys/build-ui-ee1bca933dae6187a0a3358d4b3a17b36d4b6fde"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-aff40c0fa1458edf21a3dd709b8fd45a05e0a04d-{{checksum ".buildcache/cache-keys/package-aff40c0fa1458edf21a3dd709b8fd45a05e0a04d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: aff40c0fa1458edf21a3dd709b8fd45a05e0a04d
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d0429a2db8a9fa8f8e534d941948e8762afa1241-{{checksum ".buildcache/cache-keys/package-d0429a2db8a9fa8f8e534d941948e8762afa1241"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_aee3_{{checksum ".buildcache/cache-keys/copy-source-aee3b86247aa6a7703185d13055ec8ef0561803d"}}
          keys:
            - warm-go-build-vendor-cache_4d2c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4d2cd97c46a8cbe60b8b278a7c1abead3418dbf4"}}
            - build-static-assets_543d_{{checksum ".buildcache/cache-keys/build-static-assets-543db80681a157cc7cad64884b4ca8cd01310a0a"}}
            - build-ui_ee1b_{{checksum ".buildcache/cache-keys/build-ui-ee1bca933dae6187a0a3358d4b3a17b36d4b6fde"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d0429a2db8a9fa8f8e534d941948e8762afa1241-{{checksum ".buildcache/cache-keys/package-d0429a2db8a9fa8f8e534d941948e8762afa1241"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d0429a2db8a9fa8f8e534d941948e8762afa1241
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-7c51bcce3eb9dccbe75798fad1fac399c30dbe10-{{checksum ".buildcache/cache-keys/package-7c51bcce3eb9dccbe75798fad1fac399c30dbe10"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_aee3_{{checksum ".buildcache/cache-keys/copy-source-aee3b86247aa6a7703185d13055ec8ef0561803d"}}
          keys:
            - warm-go-build-vendor-cache_4d2c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4d2cd97c46a8cbe60b8b278a7c1abead3418dbf4"}}
            - build-static-assets_543d_{{checksum ".buildcache/cache-keys/build-static-assets-543db80681a157cc7cad64884b4ca8cd01310a0a"}}
            - build-ui_ee1b_{{checksum ".buildcache/cache-keys/build-ui-ee1bca933dae6187a0a3358d4b3a17b36d4b6fde"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-7c51bcce3eb9dccbe75798fad1fac399c30dbe10-{{checksum ".buildcache/cache-keys/package-7c51bcce3eb9dccbe75798fad1fac399c30dbe10"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 7c51bcce3eb9dccbe75798fad1fac399c30dbe10
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-f32f92f92f731f47d1be27dd27b789cadcfe777b-{{checksum ".buildcache/cache-keys/package-f32f92f92f731f47d1be27dd27b789cadcfe777b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_aee3_{{checksum ".buildcache/cache-keys/copy-source-aee3b86247aa6a7703185d13055ec8ef0561803d"}}
          keys:
            - warm-go-build-vendor-cache_4d2c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4d2cd97c46a8cbe60b8b278a7c1abead3418dbf4"}}
            - build-static-assets_543d_{{checksum ".buildcache/cache-keys/build-static-assets-543db80681a157cc7cad64884b4ca8cd01310a0a"}}
            - build-ui_ee1b_{{checksum ".buildcache/cache-keys/build-ui-ee1bca933dae6187a0a3358d4b3a17b36d4b6fde"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-f32f92f92f731f47d1be27dd27b789cadcfe777b-{{checksum ".buildcache/cache-keys/package-f32f92f92f731f47d1be27dd27b789cadcfe777b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: f32f92f92f731f47d1be27dd27b789cadcfe777b
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-62a9d90b0eba75bf2ae50edc600c59c631e31752-{{checksum ".buildcache/cache-keys/package-62a9d90b0eba75bf2ae50edc600c59c631e31752"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_aee3_{{checksum ".buildcache/cache-keys/copy-source-aee3b86247aa6a7703185d13055ec8ef0561803d"}}
          keys:
            - warm-go-build-vendor-cache_4d2c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4d2cd97c46a8cbe60b8b278a7c1abead3418dbf4"}}
            - build-static-assets_543d_{{checksum ".buildcache/cache-keys/build-static-assets-543db80681a157cc7cad64884b4ca8cd01310a0a"}}
            - build-ui_ee1b_{{checksum ".buildcache/cache-keys/build-ui-ee1bca933dae6187a0a3358d4b3a17b36d4b6fde"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-62a9d90b0eba75bf2ae50edc600c59c631e31752-{{checksum ".buildcache/cache-keys/package-62a9d90b0eba75bf2ae50edc600c59c631e31752"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 62a9d90b0eba75bf2ae50edc600c59c631e31752
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-c766121b0823375a3f534a69fd6e829114f49d9d-{{checksum ".buildcache/cache-keys/package-c766121b0823375a3f534a69fd6e829114f49d9d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_aee3_{{checksum ".buildcache/cache-keys/copy-source-aee3b86247aa6a7703185d13055ec8ef0561803d"}}
          keys:
            - warm-go-build-vendor-cache_4d2c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4d2cd97c46a8cbe60b8b278a7c1abead3418dbf4"}}
            - build-static-assets_543d_{{checksum ".buildcache/cache-keys/build-static-assets-543db80681a157cc7cad64884b4ca8cd01310a0a"}}
            - build-ui_ee1b_{{checksum ".buildcache/cache-keys/build-ui-ee1bca933dae6187a0a3358d4b3a17b36d4b6fde"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-c766121b0823375a3f534a69fd6e829114f49d9d-{{checksum ".buildcache/cache-keys/package-c766121b0823375a3f534a69fd6e829114f49d9d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: c766121b0823375a3f534a69fd6e829114f49d9d
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-519e2025575149e4b6bd47ec1860082e61b14f3a-{{checksum ".buildcache/cache-keys/package-519e2025575149e4b6bd47ec1860082e61b14f3a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_aee3_{{checksum ".buildcache/cache-keys/copy-source-aee3b86247aa6a7703185d13055ec8ef0561803d"}}
          keys:
            - warm-go-build-vendor-cache_4d2c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4d2cd97c46a8cbe60b8b278a7c1abead3418dbf4"}}
            - build-static-assets_543d_{{checksum ".buildcache/cache-keys/build-static-assets-543db80681a157cc7cad64884b4ca8cd01310a0a"}}
            - build-ui_ee1b_{{checksum ".buildcache/cache-keys/build-ui-ee1bca933dae6187a0a3358d4b3a17b36d4b6fde"}}
            - ui-dependencies_e326_{{checksum ".buildcache/cache-keys/ui-dependencies-e32637cb0eddbb636aaba43367db03df2b6c8228"}}
            - install-yarn_d8f0_{{checksum ".buildcache/cache-keys/install-yarn-d8f06ad14416849abce755043d691e698bd16d6a"}}
            - set-workdir_a823_{{checksum ".buildcache/cache-keys/set-workdir-a8232400e220adcccbb9c45a41542b9497d0d21f"}}
            - install-go-tools_c0f5_{{checksum ".buildcache/cache-keys/install-go-tools-c0f572164cd4805f2bcf77664d7e02c169682491"}}
            - install-go_f39f_{{checksum ".buildcache/cache-keys/install-go-f39f5d66161bdd79b182943a3accdd95510c4812"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-519e2025575149e4b6bd47ec1860082e61b14f3a-{{checksum ".buildcache/cache-keys/package-519e2025575149e4b6bd47ec1860082e61b14f3a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 519e2025575149e4b6bd47ec1860082e61b14f3a
workflows:
  build-89ef7b70a778ea0b:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
